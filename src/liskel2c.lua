_osname='Liskel OS'_osversion='2.1'function require(a)if type(a)~='string'then return nil end;return _ENV[a]or _G[a]end;setmetatable(component,{__index=function(b,c)return component.getPrimary(c)end})fsaddr=component.invoke(component.list("eeprom")(),"getData")function component.getPrimary(d)if d=='filesystem'then return component.proxy(fsaddr)end;for c,e in component.list()do if e==d then return component.proxy(c)end end end;g={}function g.bind()local h=component.list('screen')()return component.gpu.bind(h)end;function g.available()local i,h=component.list('gpu')(),component.list('screen')()return i and h end;function g.copy(j,k,l,m,n,o)component.gpu.copy(j,k,l,m,n,o)end;function g.getResolution()return component.gpu.getResolution()end;function g.setResolution(l,m)return component.gpu.setResolution(l,m)end;function g.getDepth()return component.gpu.maxDepth()end;function g.setBG(p)return component.gpu.setBackground(p)end;function g.setFG(p)return component.gpu.setForeground(p)end;function g.fill(j,k,l,m)return component.gpu.fill(j,k,l,m,' ')end;function g.fillc(j,k,l,m,q)return component.gpu.fill(j,k,l,m,q)end;function g.drawText(j,k,r)return component.gpu.set(j,k,r)end;local l,m=g.getResolution()local s,t=l/2,m/2;f={}f.addr=fsaddr;function f.setBootAddress(u)f.addr=u end;function f.open(v,w)return component.filesystem.open(v,w)end;function f.read(x)return component.filesystem.read(x,math.huge)end;function f.write(x,r)return component.filesystem.write(x,r)end;function f.close(x)return component.filesystem.close(x)end;function f.list(y)return component.filesystem.list(y or'/')end;function f.mkdir(y)return component.filesystem.makeDirectory(y)end;function f.rename(z,A)return component.filesystem.rename(z,A)end;function f.remove(y)return component.filesystem.remove(y)end;function f.readfile(v)local B,C=f.open(v,'r')if not B then error(C)end;local D=''repeat local E,F=f.read(B)if not E and F then error(F)end;D=D..(E or'')until not E;f.close(B)return D end;function f.loadfile(v)return load(f.readfile(v),'='..v)end;function f.runfile(v,G,H)local I,C=f.loadfile(v..".lua")if I then local J=table.pack(xpcall(I,function(...)return debug.traceback()end,G,H))if J[1]then return table.unpack(J,2,J.n)else error(J[2])end else error(C)end end;f.load=f.loadfile;f.run=f.runfile;std_error=error;function error(K)g.setFG(0xFFFFFF)g.setBG(0x000000)g.fill(1,1,l,m)local L=1;local M=1;for l in string.gmatch(K,'()\n')do g.drawText(1,L,K:sub(M,l-1))M=l+1;L=L+1 end;g.drawText(1,L,K:sub(M))local B,N=f.open('error_log.txt','w')if B then f.write(B,K..'\n')end;f.close(B)repeat local O,u,P,Q=computer.pullSignal()until O=='key_down'and Q==28;computer.shutdown(true)end;console={}function console.Serialize(R,S)local function T(R,S,U)U=U or 1;S=S or 3;S=S-1;local V=0;local W=''while V<U do W=W..'  'V=V+1 end;local X=''if type(R)=="number"then X=X..R..''elseif type(R)=="boolean"then X=X..tostring(R)elseif type(R)=="string"then X=X..string.format("%q",R)..''elseif type(R)=="table"then if S<=0 then return'<'..type(R)..'>'end;X=X..'{\n'for c,e in pairs(R)do X=X..W..''..c..'='X=X..T(e,S,U+1)X=X..',\n'end;X=X..W:sub(1,W:len()-2)..'}'else X=X..'<'..type(R)..'>'end;return X end;return T(R,S)end;function console.ArrayToStr(Y)local Z=''for _=1,#Y do Z=Z..Y[_]end;return Z end;function console.StrToArray(r)local Z={}for _=1,#r do table.insert(Z,r:sub(_,_))end;return Z end;function console.lineout(r,L)g.fill(1,L,l,1)g.drawText(1,L,r)end;function console.lineoutoff(r,L,a0)a0=a0 or 1;g.fill(a0,L,l,1)g.drawText(a0,L,r)end;console.history={mem={},cmdmem={},size=m*10,viewheight=m-1,viewbottom=1,prevbottom=1,recallptr=1,printoffset=1,lnum=1,scrspeed=5}function console.history.PrintAll()if next(console.history.mem)==nil then return end;for _=1,console.history.viewheight-1 do local a1=console.history.viewbottom-(_-1)if a1<=0 then return end;local a2=console.history.mem[a1]local a3=console.history.viewheight-(_-1)console.lineoutoff(a2,a3,console.history.printoffset)end end;function console.history.Update()console.history.PrintAll()end;function console.history.ScrollEnd()console.history.prevbottom=console.history.viewbottom;console.history.viewbottom=#console.history.mem;console.history.PrintAll()end;function console.historyScrollTop()console.history.prevbottom=console.history.viewbottom;console.history.viewbottom=m-2;console.history.PrintAll()end;function console.history.ScrollUp(a4)a4=a4 or 1;if#console.history.mem<console.history.viewheight then return end;console.history.prevbottom=console.history.viewbottom;console.history.viewbottom=console.history.viewbottom-a4;if console.history.viewbottom<=console.history.viewheight-1 then console.history.viewbottom=console.history.viewheight-1 end;console.history.Update()end;function console.history.ScrollDown(a4)a4=a4 or 1;console.history.prevbottom=console.history.viewbottom;console.history.viewbottom=console.history.viewbottom+a4;if console.history.viewbottom>=#console.history.mem then console.history.viewbottom=#console.history.mem end;console.history.Update()end;function console.history.MoveRecall(a5)if next(console.history.cmdmem)==nil then return end;a5=a5 or 0;console.history.recallptr=console.history.recallptr+a5;if console.history.recallptr>=#console.history.cmdmem then console.history.recallptr=#console.history.cmdmem elseif console.history.recallptr<=1 then console.history.recallptr=1 end end;function console.history.ResetRecall()console.history.recallptr=#console.history.cmdmem end;function console.history.Recall()if next(console.history.cmdmem)==nil then return""end;return console.history.cmdmem[console.history.recallptr]end;function console.history.Add(r)r=" "..r;table.insert(console.history.mem,r)console.history.viewbottom=#console.history.mem;console.history.recallptr=#console.history.cmdmem+1;console.history.Update()console.history.lnum=console.history.lnum+1 end;function console.history.AddInp(r)table.insert(console.history.cmdmem,r)console.history.Add(r)end;console.input={buffer={},col=1,printoffset=1}function console.input.Print()local a6=console.ArrayToStr(console.input.buffer)console.lineoutoff(a6,m,console.input.printoffset)end;function console.input.SetPrintOffset(a0)console.input.printoffset=a0 end;function console.input.Append(r)table.insert(console.input.buffer,r)console.input.Print()end;function console.input.Insert(r,a5)a5=a5 or console.input.col;table.insert(console.input.buffer,a5,r)console.input.Print()end;function console.input.SetPos(a5)a5=a5 or#console.input.buffer;if a5<1 then a5=1 end;if a5>#console.input.buffer then a5=#console.input.buffer+1 end;console.input.col=a5 end;function console.input.MovePos(a7)local a5=console.input.col+a7;console.input.SetPos(a5)end;function console.input.GetCharAtPos()return console.input.buffer[console.input.col]end;function console.input.GetString()return console.ArrayToStr(console.input.buffer)end;function console.input.DelChar()table.remove(console.input.buffer,console.input.col)console.input.Print()end;function console.input.Clear()console.input.buffer={}console.input.col=1;console.input.Print()end;function console.input.SetBuffer(r)console.input.buffer=console.StrToArray(r)console.input.col=#console.input.buffer+1;console.input.Print()end;function console.print(r)if type(r)=='table'then r=console.Serialize(r)else r=tostring(r)end;local M=1;for l in string.gmatch(r,'()\n')do console.history.Add(r:sub(M,l-1))M=l+1 end;console.history.Add(r:sub(M))end;function console.Run()g.fill(1,2,l,m)g.setFG(0x000000)g.setBG(0xFFFFFF)g.fill(1,1,l,1)g.drawText(1,1,"  ".._osname.." ".._osversion)g.setFG(0xFFFFFF)g.setBG(0x000000)local a8="#> "local a9=true;local aa=console.history;local ab=console.input;print=console.print;console.lineout(a8,m)ab.SetPrintOffset(#a8+1)print("* F12 to restart  *")print("* F10 to shutdown *")while true do local ac=table.pack(computer.pullSignal(0.4))if ac[1]=='key_down'then if ac[4]==88 then computer.shutdown(true)end;if ac[4]==68 then computer.shutdown()end;if ac[4]==28 then aa.AddInp(ab.GetString())console.lineout(a8,m)local ad=ab.GetString()local ae,af=load(ad,'=cinput')if ae then local J,C=xpcall(ae,function(K)return K..'\n'..debug.traceback()end)if not J and C then print(C)end elseif not ae and af then print(af)else print('Unknown Command')end;ab.Clear()elseif ac[4]==14 then ab.MovePos(-1)ab.DelChar()aa.ResetRecall()elseif ac[4]==200 then aa.MoveRecall(-1)ab.SetBuffer(aa.Recall())elseif ac[4]==208 then aa.MoveRecall(1)ab.SetBuffer(aa.Recall())elseif ac[4]==203 then ab.MovePos(-1)elseif ac[4]==205 then ab.MovePos(1)elseif ac[4]==199 then ab.MovePos(-99999)elseif ac[4]==207 then ab.MovePos(99999)elseif ac[3]~=0 then local P=string.char(ac[3])ab.Insert(P)ab.MovePos(1)end elseif ac[1]=='scroll'then if ac[5]>0 then aa.ScrollUp(aa.scrspeed)elseif ac[5]<0 then aa.ScrollDown(aa.scrspeed)end end;if a9 then local ag=console.input.col+console.input.printoffset-1;g.setBG(0xFFFFFF)g.fill(ag,m,1,1)g.setBG(0x000000)a9=false else ab.Print()a9=true end end end;local function ah()console.Run()end;if component.filesystem.exists('autorun.lua')then f.runfile('autorun')end;local J,C=xpcall(ah,function(K)return K..'\n'..debug.traceback()end)if not J and C then error(C)end;computer.shutdown()